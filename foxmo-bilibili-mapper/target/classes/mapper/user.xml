<?xml version="1.0" encoding="UTF8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.foxmo.bilibili.mapper.UserMapper">

    <insert id="insertUser" parameterType="com.foxmo.bilibili.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into
            t_user(phone,email,password,salt,createTime)
        values
            (#{phone},#{email},#{password},#{salt},#{createTime});
    </insert>

    <select id="selectUserByPhone" parameterType="String" resultType="com.foxmo.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            phone = #{phone};
    </select>

    <insert id="insertUserInfo" parameterType="com.foxmo.bilibili.domain.UserInfo">
        insert into
            t_user_info(user_id,nick,avatar,sign,gender,birth,createTime)
        values
            (#{userId},#{nick},#{avatar},#{sign},#{gender},#{birth},#{createTime});
    </insert>

    <select id="selectUserById" parameterType="java.lang.Long" resultType="com.foxmo.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            id = #{userId};
    </select>

    <select id="selectUserInfoByUserId" parameterType="java.lang.Long" resultType="com.foxmo.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            user_id = #{userId};
    </select>

    <update id="updateUser" parameterType="com.foxmo.bilibili.domain.User">
        update
            t_user
        set 
            <if test=" phone != null and phone != '' ">
                phone = #{phone},
            </if>
            <if test=" email != null and email != '' ">
                email = #{email},
            </if>
            <if test=" password != null and password != '' ">
                password = #{password},
            </if>
            updateTime = #{updateTime}
        where
            id = #{id};
    </update>

    <update id="updateUserInfo" parameterType="com.foxmo.bilibili.domain.UserInfo">
        update
            t_user_info
        set
            <if test=" nick != null and nick != '' ">
                nick = #{nick},
            </if>
            <if test=" avatar != null and avatar != '' ">
                avatar = #{avatar},
            </if>
            <if test=" sign != null and sign != '' ">
                sign = #{sign},
            </if>
            <if test=" gender != null and gender !='' ">
                gender = #{gender},
            </if>
            <if test=" birth != null and birth != '' ">
                birth = #{birth},
            </if>
            updateTime = #{updateTime}
        where
            user_id = #{userId};
    </update>

    <select id="selectUserInfosByIds" resultType="com.foxmo.bilibili.domain.UserInfo">
        select 
            *
        from
            t_user_info
        <where>
            <if test="followingIdSet != null and followingIdSet.size > 0">
                user_id in
                <foreach collection="followingIdSet" item="userId" separator="," open="(" close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
    </select>
    
    <select id="pageCountUserInfos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select 
            count(1)
        from
            t_user_info
        <where>
            <if test="nick != null and nick != ''">
                nick like '%${nick}%'
            </if>
        </where>
    </select>

    <select id="selectPageListUserInfo" parameterType="java.util.Map" resultType="com.foxmo.bilibili.domain.UserInfo">
        select
            *
        from
        t_user_info
        <where>
            <if test="nick != null and nick != ''">
                nick like '%${nick}%'
            </if>
        </where>
        order id desc
        limit #{start},#{limit};
    </select>

    <select id="selectUserByPhoneOrEmail" parameterType="java.lang.String" resultType="com.foxmo.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            phone = #{phone} or email = #{email};
    </select>

    <delete id="deleteRefreshToken">
        delete from
            t_refresh_token
        where
            refreshToken = #{refreshToken};
    </delete>

    <insert id="insertRefreshToken">
        insert into
            t_refresh_token(
                    userId,
                    refreshToken,
                    createTime
        )
        values(
                    #{userId},
                    #{refreshToken},
                    #{createTime}
              );
    </insert>

    <select id="selectRefreshTokenDetail" parameterType="java.lang.String" resultType="com.foxmo.bilibili.domain.RefreshTokenDetail">
        select
            *
        from
            t_refresh_token
        where
            refreshToken = #{refreshToken};
    </select>

    <select id="batchGetUserInfoByUserIds" parameterType="java.util.List" resultType="com.foxmo.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            userId in
            <foreach collection="userIdList" item="userId" open="(" close=")" separator=",">
                #{userId}
            </foreach>
        order by id desc;
    </select>
</mapper>